<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_tile_cross</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init

tileList = ds_list_create();

top = noone;
second = noone;

/// Create tiles
repeat(5){
    scr_add_random_tile_to_deck(id);
}

// Dragging
dragging = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Place

if (dragging){
    dragging = false;
    
    // Calculate position
    var rx = scr_gridify(mouse_x);
    var ry = scr_gridify(mouse_y);
    
    // Check placement

    // Create tile object
    var newTile = instance_create(rx, ry, obj_tile);
    newTile.sprite_index = top.sprite_index;
    newTile.image_angle = top.image_angle;
    
    // Remove tile from deck
    scr_delete_top_tile_from_deck(id);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Start dragging

if (!dragging){
    if (position_meeting(mouse_x, mouse_y, id)){
        show_debug_message("Dragging");
        dragging = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw top tile

if (ds_list_size(tileList) &gt;= 1 &amp;&amp; top != noone &amp;&amp; instance_exists(top)){
    if (dragging){
        if (ds_list_size(tileList) &gt;= 2 &amp;&amp; second != noone &amp;&amp; instance_exists(second)){
            draw_sprite_ext(second.sprite_index, 0, x, y, 1, 1, second.image_angle, c_white, 1); 
        }
        
        var rx = scr_gridify(mouse_x);
        var ry = scr_gridify(mouse_y);
        draw_sprite_ext(top.sprite_index, 0, rx, ry, 1.1, 1.1, top.image_angle+5, c_white, 0.9);
    } else {
        draw_sprite_ext(top.sprite_index, 0, x, y, 1, 1, top.image_angle, c_white, 1); 
    }
}

for (var i=0; i&lt;ds_list_size(tileList);i++){
    draw_set_color(c_white);
    draw_text(32, 96+(i*24), sprite_get_name(ds_list_find_value(tileList, i).sprite_index));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
